h1. Smooth Scroll Plugin

h2. Features

h3. $.fn.smoothScroll

* Allows for easy implementation of smooth scrolling for same-page links.
* Works like this: <code>$('a').smoothScroll();</code>
* Specify a containing element if you want: <code>$('#container a').smoothScroll();</code>
* Exclude links if they are within a containing element: <code>$('#container a').smoothScroll({excludeWithin: ['.container2']});</code>
* Exclude links if they match certain conditions: <code>$('a').smoothScroll({exclude: ['.rough','#chunky']});</code>
* Adjust where the scrolling stops: <code>$('.backtotop').smoothScroll({offset: -100});</code>
* Add a callback function that is triggered after the scroll is complete: <code>$('a').smoothScroll({afterScroll: function() { alert('we made it!'); }});</code>
* Add back button support by including a history management plugin such as "Ben Alman's BBQ":http://benalman.com/code/projects/jquery-bbq/docs/files/jquery-ba-bbq-js.html. See demo/bbq.html for an example of how to implement this.

h3. $.smoothScroll

* Utility method works without a selector: <code>$.smoothScroll()</code>
* Can be used to scroll any element (not just <code>document.documentElement</code> / <code>document.body</code>)
* Doesn't automatically fire, so you need to bind it to some other user interaction. For example:

    <pre><code>
      $('button.scrollsomething').click(function() {
        $.smoothScroll({
          scrollElement: $('div.scrollme'),
          scrollTarget: '#findme'
        });
        return false;
      });
    </code></pre>

h3. $.fn.scrollable

* Selects the first matched element that is scrollable. Acts just like a DOM traversal method such as .find() or .next().
* This method is used internally by the plugin to determine which element to use for "document" scrolling: <code>$('html, body').scrollable().animate({scrollTop: someNumber}, someSpeed)</code>
